components:
  securitySchemes:
    BearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    User:
      type: object
      required:
        - name
        - email
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        photo:
          type: string
          format: uri
          example: "http://example.com/photo.jpg"
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        isAdmin:
          type: boolean
          default: false
          example: false
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Provider:
      type: object
      properties:
        provider:
          type: string
          example: "Google"
        userId:
          type: string
          example: "user-id-from-provider"
    Plan:
      type: object
      required:
        - name
        - user
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          example: "A trip to New York"
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        query:
          $ref: '#/components/schemas/PlanQuery'
        gptResponse:
          $ref: '#/components/schemas/GptResponse'
    PlanQuery:
      type: object
      required:
        - days
        - hotelLocation
        - transportation
        - city
        - nation
        - placeOfInterest
        - foodCategories
        - sentence
      properties:
        days:
          type: integer
          example: 3
        hotelLocation:
          type: string
          example: "123 Main St, New York"
        transportation:
          type: string
          enum: [ 'TRAIN', 'WALK', 'DRIVE' ]
        city:
          type: string
          example: "New York"
        nation:
          type: string
          example: "USA"
        placeOfInterest:
          type: array
          items:
            type: string
        foodCategories:
          type: array
          items:
            type: string
        sentence:
          type: string
          example: "I'd like to see the Statue of Liberty and eat at some great restaurants."
    GptResponse:
      type: object
      required:
        - name
        - hotelLocation
        - itinerary
      properties:
        name:
          type: string
          example: "My trip to New York"
        hotelLocation:
          type: string
          example: "123 Main St, New York"
        itinerary:
          type: array
          items:
            $ref: '#/components/schemas/Itinerary'
    Itinerary:
      type: object
      required:
        - day
        - date
        - events
      properties:
        day:
          type: integer
          example: 1
        date:
          type: integer
          example: 1627947600
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      type: object
      required:
        - id
        - startAt
        - endAt
        - description
        - type
        - location
        - transportation
      properties:
        id:
          type: integer
          example: 1
        startAt:
          type: integer
          example: 1627947600
        endAt:
          type: integer
          example: 1627951200
        description:
          type: string
          example: "Visit the Statue of Liberty"
        type:
          type: string
          enum: [ 'ACTIVITY', 'MEAL' ]
        location:
          type: string
          example: "Statue of Liberty, New York"
        transportation:
          type: array
          items:
            $ref: '#/components/schemas/Transportation'
    Transportation:
      type: object
      required:
        - type
        - duration
        - from
        - to
      properties:
        type:
          type: string
          enum: [ 'TRAIN', 'WALK', 'DRIVE' ]
        duration:
          type: integer
          example: 30
        from:
          type: string
          example: "123 Main St, New York"
        to:
          type: string
          example: "Statue of Liberty, New York"
